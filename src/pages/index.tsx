import { Button } from "@chakra-ui/button";
import type { NextPage } from "next";
import { signIn } from "next-auth/react";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { useSession } from "next-auth/react"
import Layout from "../components/layout/layout";
import SidebarWithHeader from "../components/layout/layout";
import { requireAuth } from "../common/requireAuth";

export const getServerSideProps = requireAuth(async (ctx) => {
  return { props: {} };
});

const Home: NextPage = () => {
  const { data: session, status } = useSession()

  if (status === "authenticated") {
    return (
      <>
        <Head>
          <title>Create T3 App</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
          <div>
            <h1>
              Create <span>T3</span> App
            </h1>

            <div>
              <h3>This stack uses:</h3>
              <ul>
                <li>
                  <a href="https://nextjs.org" target="_blank" rel="noreferrer">
                    Next.js
                  </a>
                </li>
                <li>
                  <a href="https://trpc.io" target="_blank" rel="noreferrer">
                    tRPC
                  </a>
                </li>
                <li>
                  <a
                    href="https://typescriptlang.org"
                    target="_blank"
                    rel="noreferrer"
                  >
                    TypeScript
                  </a>
                </li>
              </ul>
              <Button onClick={() => signIn()} colorScheme='blue'>Sign in</Button>
            </div>
          </div>
      </>
    );
  };

  // Fallback if not signed in
  return (
    <>
      <Button onClick={() => signIn()} colorScheme='blue'>Sign in</Button>
    </>
  )
}

export default Home;
